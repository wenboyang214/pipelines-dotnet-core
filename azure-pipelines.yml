# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  system.debyg: true

stages:
- stage: Build
  displayName: Build stage
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
  - job: wbtest1
    steps: 
    - script: echo "hello world" 
  - job: wbtest2
    steps:
    - script: echo "hello world2" 
  - job: buildjob
    steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'
    - script: dotnet publish --configuration Release --output $(pipeline.workspace)/wb
      displayName: 'dotnet publish'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: $(pipeline.workspace)/wb
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(agent.buildDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    # publish an artifact called drop
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: $(agent.buildDirectory)/$(Build.BuildId).zip
        artifactName: drop

# download the artifact drop from the previous job
#- task: DownloadBuildArtifacts@0
#  inputs:
#    downloadPath: $(pipeline.workspace)
#    artifactName: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  pool:
    vmImage: 'windows-latest'
  jobs:
  - deployment: eastus product
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          # deploy to Azure Web App production
          - task: AzureWebApp@1
            inputs:
              azureSubscription: cloudtestsubscription
              appName: wbaspdotnet
              package: $(pipeline.workspace)/drop/*.zip

  - deployment: centralus product
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          # deploy to Azure Web App production
          - task: AzureWebApp@1
            inputs:
              azureSubscription: cloudtestsubscription
              appName: wbaspdotnet
              package: $(pipeline.workspace)/drop/*.zip

  - deployment: westeurope product
    environment: 'development'
    strategy:
      runOnce:
        deploy:
          steps:
          # deploy to Azure Web App production
          - task: AzureWebApp@1
            inputs:
              azureSubscription: cloudtestsubscription
              appName: wbaspdotnet
              package: $(pipeline.workspace)/drop/*.zip